###############################################################################
#                                                                             #
#                                                       24/Jun/2013  17:27:50 #
# IAR C/C++ Compiler V5.50.1.20465/W32, Evaluation edition for MSP430         #
# Copyright 1996-2012 IAR Systems AB.                                         #
#                                                                             #
#    __rt_version  =  3                                                       #
#    __double_size =  32                                                      #
#    __reg_r4      =  free                                                    #
#    __reg_r5      =  free                                                    #
#    __pic         =  no                                                      #
#    __core        =  430                                                     #
#    Source file   =  E:\Dooya\dooya_dev\DU0106\Source\smoke\src\lib\gpio.c   #
#    Command line  =  E:\Dooya\dooya_dev\DU0106\Source\smoke\src\lib\gpio.c   #
#                     -lC E:\Dooya\dooya_dev\DU0106\Source\smoke\iar\Debug\Li #
#                     st\ -lA E:\Dooya\dooya_dev\DU0106\Source\smoke\iar\Debu #
#                     g\List\ -o E:\Dooya\dooya_dev\DU0106\Source\smoke\iar\D #
#                     ebug\Obj\ --no_cse --no_unroll --no_inline              #
#                     --no_code_motion --no_tbaa --debug -D__MSP430G2433__    #
#                     -e --double=32 --dlib_config "C:\Program Files\IAR      #
#                     Systems\Embedded Workbench 6.4                          #
#                     Evaluation\430\LIB\DLIB\dl430fn.h" -I                   #
#                     E:\Dooya\dooya_dev\DU0106\Source\smoke\iar\..\src\app\  #
#                     -I E:\Dooya\dooya_dev\DU0106\Source\smoke\iar\..\src\bs #
#                     p\ -I E:\Dooya\dooya_dev\DU0106\Source\smoke\iar\..\src #
#                     \lib\ -I E:\Dooya\dooya_dev\DU0106\Source\smoke\iar\..\ #
#                     src\Radio\ -I E:\Dooya\dooya_dev\DU0106\Source\smoke\ia #
#                     r\..\src\Radio\CC1101\ -I E:\Dooya\dooya_dev\DU0106\Sou #
#                     rce\smoke\iar\..\src\Radio\Si4455\ -Ol                  #
#    List file     =  E:\Dooya\dooya_dev\DU0106\Source\smoke\iar\Debug\List\g #
#                     pio.lst                                                 #
#    Object file   =  E:\Dooya\dooya_dev\DU0106\Source\smoke\iar\Debug\Obj\gp #
#                     io.r43                                                  #
#                                                                             #
#                                                                             #
###############################################################################

E:\Dooya\dooya_dev\DU0106\Source\smoke\src\lib\gpio.c
      1          #include "bsp.h"

   \                                 In  segment DATA16_AN, at 0x2a
   \   unsigned char volatile P2DIR
   \                     P2DIR:
   \   000000                DS8 1

   \                                 In  segment DATA16_AN, at 0x2b
   \   unsigned char volatile P2IFG
   \                     P2IFG:
   \   000000                DS8 1

   \                                 In  segment DATA16_AN, at 0x2c
   \   unsigned char volatile P2IES
   \                     P2IES:
   \   000000                DS8 1

   \                                 In  segment DATA16_AN, at 0x2d
   \   unsigned char volatile P2IE
   \                     P2IE:
   \   000000                DS8 1
      2          

   \                                 In  segment CODE, align 2
      3          void GPIO_init(void)
   \                     GPIO_init:
      4          {
      5          	P2DIR &=~BIT0;
   \   000000   D2C32A00     BIC.B   #0x1, &0x2a
      6          	P2IE  |= BIT0;
   \   000004   D2D32D00     BIS.B   #0x1, &0x2d
      7          	P2IES |= BIT0;													// Ñ¡ÔñÉÏÉý/ÏÂ½µÑØ
   \   000008   D2D32C00     BIS.B   #0x1, &0x2c
      8          //	P2REN |= BIT0;													// push-up disable
      9          }
   \   00000C   3041         RET
   \   00000E                REQUIRE P2DIR
   \   00000E                REQUIRE P2IE
   \   00000E                REQUIRE P2IES
     10          
     11          // Port 2 interrupt service routine
     12          #pragma vector=PORT2_VECTOR

   \                                 In  segment CODE, align 2
     13          __interrupt void Port_2(void)
   \                     Port_2:
     14          {
     15          	
     16          	if(!!(P2IFG & BIT0))											// Rx receive.
   \   000000   D2B32B00     BIT.B   #0x1, &0x2b
   \   000004   0228         JNC     ??Port_2_0
     17          	{
     18          		
     19          		P2IFG &= ~BIT0;                           					// P2.2 IFG cleared
   \   000006   D2C32B00     BIC.B   #0x1, &0x2b
     20          	}
     21          		/*
     22          		unsigned char len, tmp;
     23          		P2IFG &= ~BIT0;
     24          		//check CRC
     25          //		if(CC1101_Read_Status(cc1101_LQI) & cc1101_CRC_OK)
     26          		{
     27          			len = CC1101_Read_Reg(cc1101_RXFIFO);
     28          			if(len != 0x00)
     29          			{
     30          				TACTL = TASSEL_1 + MC_1 + ID_3 + TAIE;
     31          				TACCR0 = 5214;					// delay 6.4s.
     32          				P2OUT &=~BIT3;
     33          				tmp = CC1101_Read_Reg(cc1101_RXFIFO);
     34          				if(tmp == 0xB1)
     35          				{
     36          					P1OUT ^= BIT3;			// Open LED.
     37          				}
     38          			}
     39          			len = CC1101_Read_Reg(cc1101_RXFIFO);
     40          			if(len == 2)
     41          			{
     42          				tmp = CC1101_Read_Reg(cc1101_RXFIFO);
     43          				if(tmp == 0xB1)
     44          				{
     45          					P1OUT ^= BIT3;			// Open LED.
     46          				}
     47          			}
     48          			len = CC1101_Read_Reg(cc1101_RXFIFO);
     49          			if(len == 2)
     50          			{
     51          				tmp = CC1101_Read_Reg(cc1101_RXFIFO);
     52          				if(tmp == 0xB1)
     53          				{
     54          					P1OUT ^= BIT3;			// Open LED.
     55          				}
     56          			}
     57          		}
     58          		//wish cc1101 rx fifo and access to RX mode...
     59          		CC1101_Entry_XMode(Rf_Rx_Flush_RxFifo);
     60          	}
     61          	else if(!!(P2IFG & BIT2))				// KEY is down.
     62          	{
     63          		P2IFG &= ~BIT2;
     64          		
     65          		sys_send = 1;
     66          	}
     67          	*/
     68          //	_BIS_SR(LPM0_bits + GIE);                 // Enter LPM0 w/ interrupt
     69              //Clean interrupt flag
     70          //    Clean_Interrupt_ISR_Flag;
     71              //get data packet
     72          //    CC1101_Receive_Packet();
     73           }
   \                     ??Port_2_0:
   \   00000A   0013         RETI
   \   00000C                REQUIRE P2IFG

   \                                 In  segment INTVEC, offset 0x6, root
   \                     `??Port_2??INTVEC 6`:
   \   000006   ....         DC16    Port_2

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
       2  GPIO_init
       4  Port_2


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       2  ??Port_2??INTVEC 6
      14  GPIO_init
       1  P2DIR
       1  P2IE
       1  P2IES
       1  P2IFG
      12  Port_2

 
 26 bytes in segment CODE
  4 bytes in segment DATA16_AN
  2 bytes in segment INTVEC
 
 26 bytes of CODE  memory
  0 bytes of CONST memory (+ 2 bytes shared)
  0 bytes of DATA  memory (+ 4 bytes shared)

Errors: none
Warnings: none
