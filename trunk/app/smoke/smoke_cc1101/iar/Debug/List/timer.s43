///////////////////////////////////////////////////////////////////////////////
//                                                                            /
//                                                      24/Jun/2013  16:43:06 /
// IAR C/C++ Compiler V5.50.1.20465/W32, Evaluation edition for MSP430        /
// Copyright 1996-2012 IAR Systems AB.                                        /
//                                                                            /
//    __rt_version  =  3                                                      /
//    __double_size =  32                                                     /
//    __reg_r4      =  free                                                   /
//    __reg_r5      =  free                                                   /
//    __pic         =  no                                                     /
//    __core        =  430                                                    /
//    Source file   =  E:\Dooya\dooya_dev\DU0106\Source\smoke\src\lib\timer.c /
//    Command line  =  E:\Dooya\dooya_dev\DU0106\Source\smoke\src\lib\timer.c /
//                      -lC E:\Dooya\dooya_dev\DU0106\Source\smoke\iar\Debug\ /
//                     List\ -lA E:\Dooya\dooya_dev\DU0106\Source\smoke\iar\D /
//                     ebug\List\ -o E:\Dooya\dooya_dev\DU0106\Source\smoke\i /
//                     ar\Debug\Obj\ --no_cse --no_unroll --no_inline         /
//                     --no_code_motion --no_tbaa --debug -D__MSP430G2433__   /
//                     -e --double=32 --dlib_config "C:\Program Files\IAR     /
//                     Systems\Embedded Workbench 6.4                         /
//                     Evaluation\430\LIB\DLIB\dl430fn.h" -I                  /
//                     E:\Dooya\dooya_dev\DU0106\Source\smoke\iar\..\src\app\ /
//                      -I E:\Dooya\dooya_dev\DU0106\Source\smoke\iar\..\src\ /
//                     bsp\ -I E:\Dooya\dooya_dev\DU0106\Source\smoke\iar\..\ /
//                     src\lib\ -I E:\Dooya\dooya_dev\DU0106\Source\smoke\iar /
//                     \..\src\Radio\ -I E:\Dooya\dooya_dev\DU0106\Source\smo /
//                     ke\iar\..\src\Radio\CC1101\ -I                         /
//                     E:\Dooya\dooya_dev\DU0106\Source\smoke\iar\..\src\Radi /
//                     o\Si4455\ -Ol                                          /
//    List file     =  E:\Dooya\dooya_dev\DU0106\Source\smoke\iar\Debug\List\ /
//                     timer.s43                                              /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME timer

        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__core", "430"
        RTMODEL "__double_size", "32"
        RTMODEL "__pic", "no"
        RTMODEL "__reg_r4", "free"
        RTMODEL "__reg_r5", "free"
        RTMODEL "__rt_version", "3"

        RSEG CSTACK:DATA:SORT:NOROOT(0)

        EXTERN ?SwitchKey16
        EXTERN ?longjmp_r4
        EXTERN ?longjmp_r5
        EXTERN ?setjmp_r4
        EXTERN ?setjmp_r5

        PUBWEAK `??Timer_A??INTVEC 18`
        PUBWEAK ?setjmp_save_r4
        PUBWEAK ?setjmp_save_r5
        PUBWEAK TA0CCR0
        PUBWEAK TA0CCTL0
        PUBWEAK TA0CTL
        PUBWEAK TA0IV
        PUBLIC Timer_A
        FUNCTION Timer_A,0233H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 6, STACK
        PUBLIC timer_A_init
        FUNCTION timer_A_init,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 2, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA SP DATA
          CFI Resource PC:16, SP:16, SR:16, R4:16, R5:16, R6:16, R7:16, R8:16
          CFI Resource R9:16, R10:16, R11:16, R12:16, R13:16, R14:16, R15:16
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 2
          CFI DataAlign 2
          CFI ReturnAddress PC CODE
          CFI CFA SP+2
          CFI PC Frame(CFA, -2)
          CFI SR Undefined
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 Undefined
          CFI R13 Undefined
          CFI R14 Undefined
          CFI R15 Undefined
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 2
          CFI DataAlign 2
          CFI ReturnAddress PC CODE
          CFI CFA SP+4
          CFI PC Frame(CFA, -2)
          CFI SR Frame(CFA, -4)
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 SameValue
          CFI R13 SameValue
          CFI R14 SameValue
          CFI R15 SameValue
          CFI EndCommon cfiCommon1
        
Timer_A             SYMBOL "Timer_A"
`??Timer_A??INTVEC 18` SYMBOL "??INTVEC 18", Timer_A

// E:\Dooya\dooya_dev\DU0106\Source\smoke\src\lib\timer.c
//    1 #include <msp430.h>

        ASEGN DATA16_AN:DATA:NOROOT,012eH
// unsigned short const volatile TA0IV
TA0IV:
        DS8 2

        ASEGN DATA16_AN:DATA:NOROOT,0160H
// unsigned short volatile TA0CTL
TA0CTL:
        DS8 2

        ASEGN DATA16_AN:DATA:NOROOT,0162H
// unsigned short volatile TA0CCTL0
TA0CCTL0:
        DS8 2

        ASEGN DATA16_AN:DATA:NOROOT,0172H
// unsigned short volatile TA0CCR0
TA0CCR0:
        DS8 2
//    2 #include "timer.h"
//    3 

        RSEG CODE:CODE:REORDER:NOROOT(1)
//    4 void timer_A_init(void)
timer_A_init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function timer_A_init
//    5 {
//    6 	CCTL0 = CCIE;                             						// CCR0 interrupt enabled
        MOV.W   #0x10, &0x162
//    7 	CCR0 = 1000-1;                             						// CCR0 Period
        MOV.W   #0x3e7, &0x172
//    8 	
//    9 	TACTL = TASSEL_1 + MC_1;	            						// ACLK, up mode, interrupt.
        MOV.W   #0x110, &0x160
//   10 
//   11 	_BIS_SR(LPM3_bits);                       						// Enter LPM3
        BIS.W   #0xd0, SR
//   12 }
        RET
          CFI EndBlock cfiBlock0
        REQUIRE TA0CCTL0
        REQUIRE TA0CCR0
        REQUIRE TA0CTL
//   13 
//   14 extern void radio_timer_send(void);
//   15 
//   16 // Timer A0 interrupt service routine
//   17 #pragma vector=TIMER0_A0_VECTOR

        RSEG CODE:CODE:REORDER:NOROOT(1)
//   18 __interrupt void Timer_A(void)
Timer_A:
          CFI Block cfiBlock1 Using cfiCommon1
          CFI Function Timer_A
//   19 {
        PUSH.W  R15
          CFI R15 Frame(CFA, -6)
          CFI CFA SP+6
//   20 //	radio_timer_send();
//   21 
//   22 	switch( TA0IV )
        MOV.W   &0x12e, R15
        SUB.W   #0x2, R15
        JEQ     ??Timer_A_2
        SUB.W   #0x2, R15
        JEQ     ??Timer_A_2
        SUB.W   #0x6, R15
//   23 	{
//   24 		case  2:  break;                        					// CCR1 not used
//   25 		case  4:  break;                        					// CCR2 not used
//   26 		case 10:  
//   27 			                						// send timer data
//   28 				  break;
//   29 	}
//   30 }
??Timer_A_2:
        POP.W   R15
          CFI R15 SameValue
          CFI CFA SP+4
        RETI
          CFI EndBlock cfiBlock1
        REQUIRE TA0IV

        COMMON INTVEC:CONST:ROOT(1)
        ORG 18
`??Timer_A??INTVEC 18`:
        DC16    Timer_A

        RSEG CODE:CODE:REORDER:NOROOT(1)
?setjmp_save_r4:
        REQUIRE ?setjmp_r4
        REQUIRE ?longjmp_r4

        RSEG CODE:CODE:REORDER:NOROOT(1)
?setjmp_save_r5:
        REQUIRE ?setjmp_r5
        REQUIRE ?longjmp_r5

        END
// 
// 46 bytes in segment CODE
//  8 bytes in segment DATA16_AN
//  2 bytes in segment INTVEC
// 
// 46 bytes of CODE  memory
//  0 bytes of CONST memory (+ 2 bytes shared)
//  0 bytes of DATA  memory (+ 8 bytes shared)
//
//Errors: none
//Warnings: none
