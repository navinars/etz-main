///////////////////////////////////////////////////////////////////////////////
//                                                                            /
//                                                      24/Jun/2013  17:27:50 /
// IAR C/C++ Compiler V5.50.1.20465/W32, Evaluation edition for MSP430        /
// Copyright 1996-2012 IAR Systems AB.                                        /
//                                                                            /
//    __rt_version  =  3                                                      /
//    __double_size =  32                                                     /
//    __reg_r4      =  free                                                   /
//    __reg_r5      =  free                                                   /
//    __pic         =  no                                                     /
//    __core        =  430                                                    /
//    Source file   =  E:\Dooya\dooya_dev\DU0106\Source\smoke\src\lib\gpio.c  /
//    Command line  =  E:\Dooya\dooya_dev\DU0106\Source\smoke\src\lib\gpio.c  /
//                     -lC E:\Dooya\dooya_dev\DU0106\Source\smoke\iar\Debug\L /
//                     ist\ -lA E:\Dooya\dooya_dev\DU0106\Source\smoke\iar\De /
//                     bug\List\ -o E:\Dooya\dooya_dev\DU0106\Source\smoke\ia /
//                     r\Debug\Obj\ --no_cse --no_unroll --no_inline          /
//                     --no_code_motion --no_tbaa --debug -D__MSP430G2433__   /
//                     -e --double=32 --dlib_config "C:\Program Files\IAR     /
//                     Systems\Embedded Workbench 6.4                         /
//                     Evaluation\430\LIB\DLIB\dl430fn.h" -I                  /
//                     E:\Dooya\dooya_dev\DU0106\Source\smoke\iar\..\src\app\ /
//                      -I E:\Dooya\dooya_dev\DU0106\Source\smoke\iar\..\src\ /
//                     bsp\ -I E:\Dooya\dooya_dev\DU0106\Source\smoke\iar\..\ /
//                     src\lib\ -I E:\Dooya\dooya_dev\DU0106\Source\smoke\iar /
//                     \..\src\Radio\ -I E:\Dooya\dooya_dev\DU0106\Source\smo /
//                     ke\iar\..\src\Radio\CC1101\ -I                         /
//                     E:\Dooya\dooya_dev\DU0106\Source\smoke\iar\..\src\Radi /
//                     o\Si4455\ -Ol                                          /
//    List file     =  E:\Dooya\dooya_dev\DU0106\Source\smoke\iar\Debug\List\ /
//                     gpio.s43                                               /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME gpio

        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__core", "430"
        RTMODEL "__double_size", "32"
        RTMODEL "__pic", "no"
        RTMODEL "__reg_r4", "free"
        RTMODEL "__reg_r5", "free"
        RTMODEL "__rt_version", "3"

        RSEG CSTACK:DATA:SORT:NOROOT(0)

        EXTERN ?longjmp_r4
        EXTERN ?longjmp_r5
        EXTERN ?setjmp_r4
        EXTERN ?setjmp_r5

        PUBWEAK `??Port_2??INTVEC 6`
        PUBWEAK ?setjmp_save_r4
        PUBWEAK ?setjmp_save_r5
        PUBLIC GPIO_init
        FUNCTION GPIO_init,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 2, STACK
        PUBWEAK P2DIR
        PUBWEAK P2IE
        PUBWEAK P2IES
        PUBWEAK P2IFG
        PUBLIC Port_2
        FUNCTION Port_2,0233H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA SP DATA
          CFI Resource PC:16, SP:16, SR:16, R4:16, R5:16, R6:16, R7:16, R8:16
          CFI Resource R9:16, R10:16, R11:16, R12:16, R13:16, R14:16, R15:16
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 2
          CFI DataAlign 2
          CFI ReturnAddress PC CODE
          CFI CFA SP+2
          CFI PC Frame(CFA, -2)
          CFI SR Undefined
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 Undefined
          CFI R13 Undefined
          CFI R14 Undefined
          CFI R15 Undefined
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 2
          CFI DataAlign 2
          CFI ReturnAddress PC CODE
          CFI CFA SP+4
          CFI PC Frame(CFA, -2)
          CFI SR Frame(CFA, -4)
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 SameValue
          CFI R13 SameValue
          CFI R14 SameValue
          CFI R15 SameValue
          CFI EndCommon cfiCommon1
        
Port_2              SYMBOL "Port_2"
`??Port_2??INTVEC 6` SYMBOL "??INTVEC 6", Port_2

// E:\Dooya\dooya_dev\DU0106\Source\smoke\src\lib\gpio.c
//    1 #include "bsp.h"

        ASEGN DATA16_AN:DATA:NOROOT,02aH
// unsigned char volatile P2DIR
P2DIR:
        DS8 1

        ASEGN DATA16_AN:DATA:NOROOT,02bH
// unsigned char volatile P2IFG
P2IFG:
        DS8 1

        ASEGN DATA16_AN:DATA:NOROOT,02cH
// unsigned char volatile P2IES
P2IES:
        DS8 1

        ASEGN DATA16_AN:DATA:NOROOT,02dH
// unsigned char volatile P2IE
P2IE:
        DS8 1
//    2 

        RSEG CODE:CODE:REORDER:NOROOT(1)
//    3 void GPIO_init(void)
GPIO_init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function GPIO_init
//    4 {
//    5 	P2DIR &=~BIT0;
        BIC.B   #0x1, &0x2a
//    6 	P2IE  |= BIT0;
        BIS.B   #0x1, &0x2d
//    7 	P2IES |= BIT0;													// Ñ¡ÔñÉÏÉý/ÏÂ½µÑØ
        BIS.B   #0x1, &0x2c
//    8 //	P2REN |= BIT0;													// push-up disable
//    9 }
        RET
          CFI EndBlock cfiBlock0
        REQUIRE P2DIR
        REQUIRE P2IE
        REQUIRE P2IES
//   10 
//   11 // Port 2 interrupt service routine
//   12 #pragma vector=PORT2_VECTOR

        RSEG CODE:CODE:REORDER:NOROOT(1)
//   13 __interrupt void Port_2(void)
Port_2:
          CFI Block cfiBlock1 Using cfiCommon1
          CFI Function Port_2
//   14 {
//   15 	
//   16 	if(!!(P2IFG & BIT0))											// Rx receive.
        BIT.B   #0x1, &0x2b
        JNC     ??Port_2_0
//   17 	{
//   18 		
//   19 		P2IFG &= ~BIT0;                           					// P2.2 IFG cleared
        BIC.B   #0x1, &0x2b
//   20 	}
//   21 		/*
//   22 		unsigned char len, tmp;
//   23 		P2IFG &= ~BIT0;
//   24 		//check CRC
//   25 //		if(CC1101_Read_Status(cc1101_LQI) & cc1101_CRC_OK)
//   26 		{
//   27 			len = CC1101_Read_Reg(cc1101_RXFIFO);
//   28 			if(len != 0x00)
//   29 			{
//   30 				TACTL = TASSEL_1 + MC_1 + ID_3 + TAIE;
//   31 				TACCR0 = 5214;					// delay 6.4s.
//   32 				P2OUT &=~BIT3;
//   33 				tmp = CC1101_Read_Reg(cc1101_RXFIFO);
//   34 				if(tmp == 0xB1)
//   35 				{
//   36 					P1OUT ^= BIT3;			// Open LED.
//   37 				}
//   38 			}
//   39 			len = CC1101_Read_Reg(cc1101_RXFIFO);
//   40 			if(len == 2)
//   41 			{
//   42 				tmp = CC1101_Read_Reg(cc1101_RXFIFO);
//   43 				if(tmp == 0xB1)
//   44 				{
//   45 					P1OUT ^= BIT3;			// Open LED.
//   46 				}
//   47 			}
//   48 			len = CC1101_Read_Reg(cc1101_RXFIFO);
//   49 			if(len == 2)
//   50 			{
//   51 				tmp = CC1101_Read_Reg(cc1101_RXFIFO);
//   52 				if(tmp == 0xB1)
//   53 				{
//   54 					P1OUT ^= BIT3;			// Open LED.
//   55 				}
//   56 			}
//   57 		}
//   58 		//wish cc1101 rx fifo and access to RX mode...
//   59 		CC1101_Entry_XMode(Rf_Rx_Flush_RxFifo);
//   60 	}
//   61 	else if(!!(P2IFG & BIT2))				// KEY is down.
//   62 	{
//   63 		P2IFG &= ~BIT2;
//   64 		
//   65 		sys_send = 1;
//   66 	}
//   67 	*/
//   68 //	_BIS_SR(LPM0_bits + GIE);                 // Enter LPM0 w/ interrupt
//   69     //Clean interrupt flag
//   70 //    Clean_Interrupt_ISR_Flag;
//   71     //get data packet
//   72 //    CC1101_Receive_Packet();
//   73  }
??Port_2_0:
        RETI
          CFI EndBlock cfiBlock1
        REQUIRE P2IFG

        COMMON INTVEC:CONST:ROOT(1)
        ORG 6
`??Port_2??INTVEC 6`:
        DC16    Port_2

        RSEG CODE:CODE:REORDER:NOROOT(1)
?setjmp_save_r4:
        REQUIRE ?setjmp_r4
        REQUIRE ?longjmp_r4

        RSEG CODE:CODE:REORDER:NOROOT(1)
?setjmp_save_r5:
        REQUIRE ?setjmp_r5
        REQUIRE ?longjmp_r5

        END
// 
// 26 bytes in segment CODE
//  4 bytes in segment DATA16_AN
//  2 bytes in segment INTVEC
// 
// 26 bytes of CODE  memory
//  0 bytes of CONST memory (+ 2 bytes shared)
//  0 bytes of DATA  memory (+ 4 bytes shared)
//
//Errors: none
//Warnings: none
